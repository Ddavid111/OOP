package veletlen;

import java.lang.reflect.Array;
import java.util.Arrays;

public class Random {

	
	
	public static void main(String[] args) {
		int[]array=new int[10];
		fillArray(array,0,50);
		printArray(array);
		System.out.println("Largest even in array: "+greatestEven(array));
		System.out.println("Squares in array: "+cntSquares(array));
		System.out.println("Geometric average:"+geometricAvg(array));
		
		System.out.println(Arrays.toString(array));
		Arrays.sort(array);
		System.out.println(Arrays.toString(array));
		int index=Arrays.binarySearch(array, 10);
		System.out.println("Index of 10 in array: "+Arrays.binarySearch(array, 10));
		if(index >=0){
			System.out.println("10 is in the array.");
			
		}
		else{
			System.out.println("10 is not in the array.");
			
			
		}
		int[] randoArray={1,2,3,4,5,6,7,8,9,10};
		//int[] array2=array;
		System.out.println("array == rando array= "+Arrays.equals(array, randoArray));
		//System.out.println("Is array equal to itself? "+Arrays.equals((array==array2)+"equals"+Arrays.equals(array,array2));
		
		
		
		
		
		
		
	}

	public static void fillArray(int[]array,int min,int max){
		for(int i=0;i<array.length;i++){
			array[i]=(int)(Math.random() * (max-min+1))+min;
			
			
		}
		
		
		
		
		
	}
	
	public static void printArray(int[]array){
		for(int elem:array){
			System.out.print(elem+" ");
			
		}
		System.out.println();
		
	}
	public static int greatestEven(int[] array){
		int max=Integer.MIN_VALUE;
		for(int elem:array)
		{
			if(elem%2==0 &&elem>max){
				
				max=elem;
				
				
			}
			
			
		}
		
		return max;
	}
	
	public static int cntSquares(int[] array){
		int cnt=0;
		for(int elem:array)
		{
			double squareRoot=Math.sqrt(elem);
			if(squareRoot==(int)squareRoot){
				cnt++;
				System.out.println(elem);
				
			}
			
		}
		
		return cnt;
	}
	
	public static double geometricAvg(int[] array){
		double avg=1;
		for(int elem:array){
			
			avg *=elem;
		}
		
		
		
		
		
		
		return Math.pow(avg, 1.0 / (double)array.length);
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
